spring:
  application:
    name: Message-Service
  datasource:
    url: ${BLOSSOM_MESSAGE_DB}
    username: ${BLOSSOM_MESSAGE_DB_USERNAME}
    password: ${BLOSSOM_MESSAGE_DB_PASSWORD}
  kafka:
    bootstrap-servers: ${BLOSSOM_KAFKA}
    topic: message-resource-event-notification
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.spring.json.type.mapping: event:org.blossom.model.ResourceEvent
    consumer:
      group-id: messageListenerId
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.blossom.json.CustomResourceEventDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "org.blossom.model"
            type:
              mapping: event:org.blossom.model.ResourceEvent
  redis:
    host: ${BLOSSOM_MESSAGE_CACHE_HOST}
    port: ${BLOSSOM_MESSAGE_CACHE_PORT}
broker:
  host: ${BLOSSOM_MESSAGE_BROKER_HOST}
  port: ${BLOSSOM_MESSAGE_BROKER_PORT}
  username: ${BLOSSOM_MESSAGE_BROKER_USERNAME}
  password: ${BLOSSOM_MESSAGE_BROKER_PASSWORD}
server:
  port: ${BLOSSOM_MESSAGE_PORT}
websocket:
  origins: ${BLOSSOM_NOTIFICATION_ALLOWED_ORIGINS}
  test:
    enabled: ${BLOSSOM_NOTIFICATION_TEST_MODE_ENABLED}
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/